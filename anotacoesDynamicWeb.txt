- configuracoes iniciais:
	* baixar tomcat quando não usar o do xampp
	* ter jboss instalado
	*ter jsp instalado
	I. new > other > project dynamic web;
	II. New Runtime;
	III. pasta Apache >  apache tomcat na versão que tem instalado no xampp;
	pra verificar, só ir nas configurações do xampp;
	IV. Next > Browse > selecionar caminho do tomcat.

- as pastas DAO e control sao criadas dentro de src > main > java;

----------- MODELO MVC
- CONTROL - SERVLET: recebe todos os dados referentes a html
- VIEW - JSP: cria pastas dinamicas pra html
	HTML, CSS e JS
- MODEL - persistencia e entidade/classe


- para configurar naveador que se quer utilizar para abrir a visualização
do html, basta clicar em window > web browser > escolher navegador

- para visualizar em um navegador, basta 
clicar com botão direito sob o codigo > open with > web browser

- fluxo:
	I. o arquivo .html tem um botão que, ao ser clicado, envia informações do
	html para o servlet (servidor);
	II. no servlet o .html será lido/interpretado;
	III. html/dados são enviados para outro lugar, que pode ser outra pagina de html
	OBS.: para receber os resultados do servlet, o ideal é criar um arquivo .jsp
	que é um arquivo dinamico. o html é estático
	
- servlet é criado na pasta CONTROL. ele é uma classe que herda propriedades 
	de HttpServlet

- o request pega informações de name e value das tags html, por isso é IMPORTANTE
	ter ambos definidos nas tags

- em "action" é preciso apontar para o servlet para onde serão enviados os dados html
	e também é preciso explicitar o metodo que será utilizado 
	exemplo: <form action="SvExemplo01" method="get">

- metodos doGet e doPost são ativados quando são chamados por get ou post;

- response é a variável (de uma classe) que contem informações do destinatário e remetente; 

- request é a variável (de uma classe) que  contem o conteúdo dos dados;

- caso o retorno do request seja null, pode ser que o parametro não exista ou o "name" 
	esteja escrito errado. ou seja, o retorno do request não dá erro!

- parametro: não pode ser alterado. para isso existe o attribute

- pode-se acrescentar informações (atributos) no request. para isso, basta utilizar
	exemplo: request.setAttribute("nomeAtributo", nomeVariavel);
	
- o .jsp é a junção do java com html em um arquvio. ele é dinâmico, por isso é mais
	indicado para se utilizar como arquivo para retorno das requisições do servlet;
	
------- FORMAS DE USAR JAVA DENTRO DO .JSP
- para formato mais genérico:     <% %>
- para formato com retorno:       <%= %>
- para formato com importação:    <%@ %>

- pelo método doGet, as informações recebidas no request são explicitadas na
url. ex.: http://localhost:8080/Projeto_MVC/SvExemplo01?nomeCadastrado=Thalia&nota1=7&nota2=8

- para fazer o projeto rodar no localhost, basta clicar com o botão direito
sob o arquivo de inicialização (geralmente o index) > Run as > Run on server
Obs.: na primeira vez aparecerão umas opções de preenchimento a respeito
do servidor que será utilizado. sempre devemos ir em Apache > selecionar a versão
do TomCast que está sendo utilizada

- 